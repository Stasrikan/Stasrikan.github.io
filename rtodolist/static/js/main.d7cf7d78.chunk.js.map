{"version":3,"sources":["media/images/delete.svg","serviceWorker.js","components/imports/Header.jsx","components/redux/reducers/todo-items-reducer.js","components/pages/Index/Todo/Todo.jsx","components/pages/Index/Todo/TodoContainer.jsx","components/imports/Message.jsx","components/pages/Index/Index.jsx","components/pages/Index/IndexContainer.jsx","components/imports/Menu/Categories/Category/Category.jsx","components/redux/reducers/menu-reducer.js","components/imports/Menu/Categories/Category/CategoryContainer.jsx","components/imports/Menu/Categories/Categories.jsx","components/imports/Menu/Categories/CategoriesContainer.jsx","components/imports/Menu/Menu.jsx","components/imports/Menu/MenuContainer.jsx","components/redux/reducers/settings-reducer.js","components/pages/Settings/Settings.jsx","components/pages/Settings/SettingsContainer.jsx","App.js","AppContainer.jsx","components/redux/store.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","initialState","todos","todoCreateWindow","isOpened","todoTitleText","todoReminderTimeText","todoItemsReducer","state","action","type","newTodo","id","length","title","completed","reminderTime","isReminded","category","map","todo","todoId","filter","categoryName","text","Todo","toggleComplete","removeTodo","onChange","checked","htmlFor","onClick","src","deleteIcon","alt","connect","Message","children","todoWindow","toggleWindow","e","target","currentTarget","toggleWindowClick","Index","addTodo","toggleTodoWindow","changeTitleText","changeReminderTimeText","props","params","TodoContainer","key","value","changeTitleTextInput","placeholder","changeReminderTimeTextEvent","Notification","permission","requestPermission","withRouterContainer","withRouter","todoItems","Category","removeCategory","removeAllTodoFromCategory","to","history","push","isCategoriesOpened","categories","items","categoriesCreateWindow","categoryNameText","menuReducer","Categories","addCategory","toggleCreateCategoryWindow","categoryWindowTextChange","index","CategoryContainer","categoryWindowTextChaneEvent","menu","name","Menu","openMenu","openCategories","CategoriesContainer","theme","settingsReducer","Settings","settings","changeTheme","changeThemeClick","App","data-theme","MenuContainer","exact","path","IndexContainer","SettingsContainer","combinedReducers","combineReducers","persistedState","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","setInterval","array","currentTime","Date","now","toLocaleTimeString","slice","forEach","dispatch","body","icon","ReactDOM","render","StrictMode","AppContainer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7cf7d78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.87e8dd41.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport \"../../styles/imports/header.scss\";\nfunction Header() {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<h1>Todo App</h1>\n\t\t</div>\n\t);\n}\nexport default Header;\n","const TODO_ADD = \"TODO-ADD\";\nconst TOGGLE_COMPLETE = \"TOGGLE-COMPLETE\";\nconst REMOVE_TODO = \"REMOVE-TODO\";\nconst TOGGLE_REMINDED = \"TOGGLE-REMINDED\";\nconst REMOVE_ALL_TODO_FROM_CATEGORY = \"REMOVE-ALL-TODO-FROM-CATEGORY\";\n\n// Для окна создания туду\nconst TOGGLE_TODO_WINDOW = \"TOGGLE-TODO-WINDOW\";\nconst CHANGE_TITLE_TEXT = \"CHANGE-TITLE-TEXT\";\nconst CHANGE_REMINDER_TIME_TEXT = \"CHANGE-REMINDER-TEXT\";\nlet initialState = {\n\ttodos: [],\n\ttodoCreateWindow: {\n\t\tisOpened: false,\n\t\ttodoTitleText: \"\",\n\t\ttodoReminderTimeText: \"\",\n\t},\n};\nfunction todoItemsReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase TODO_ADD:\n\t\t\tlet newTodo = {\n\t\t\t\tid: state.todos.length,\n\t\t\t\ttitle: state.todoCreateWindow.todoTitleText,\n\t\t\t\tcompleted: false,\n\t\t\t\treminderTime: state.todoCreateWindow.todoReminderTimeText,\n\t\t\t\tisReminded: false,\n\t\t\t\tcategory: action.category,\n\t\t\t};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: [...state.todos, newTodo],\n\t\t\t\ttodoCreateWindow: {\n\t\t\t\t\t...state.todoCreateWindow,\n\t\t\t\t\ttodoTitleText: \"\",\n\t\t\t\t\ttodoReminderTimeText: \"\",\n\t\t\t\t},\n\t\t\t};\n\t\tcase TOGGLE_COMPLETE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.map((todo) => (todo.id === action.todoId ? { ...todo, completed: !todo.completed } : todo)),\n\t\t\t};\n\t\tcase REMOVE_TODO:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter((todo) => todo.id !== action.todoId),\n\t\t\t};\n\t\tcase TOGGLE_REMINDED:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.map((todo) => (todo.id === action.todoId ? { ...todo, isReminded: true } : todo)),\n\t\t\t};\n\t\tcase REMOVE_ALL_TODO_FROM_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter((todo) => todo.category !== action.categoryName),\n\t\t\t};\n\t\t//Для окна создания туду\n\t\tcase TOGGLE_TODO_WINDOW:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodoCreateWindow: {\n\t\t\t\t\t...state.todoCreateWindow,\n\t\t\t\t\tisOpened: !state.todoCreateWindow.isOpened,\n\t\t\t\t},\n\t\t\t};\n\t\tcase CHANGE_TITLE_TEXT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodoCreateWindow: {\n\t\t\t\t\t...state.todoCreateWindow,\n\t\t\t\t\ttodoTitleText: action.text,\n\t\t\t\t},\n\t\t\t};\n\t\tcase CHANGE_REMINDER_TIME_TEXT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodoCreateWindow: {\n\t\t\t\t\t...state.todoCreateWindow,\n\t\t\t\t\ttodoReminderTimeText: action.text,\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nexport function toggleComplete(todoId) {\n\treturn {\n\t\ttype: TOGGLE_COMPLETE,\n\t\ttodoId,\n\t};\n}\nexport function addTodo(category) {\n\treturn {\n\t\ttype: TODO_ADD,\n\t\tcategory,\n\t};\n}\nexport function removeTodo(todoId) {\n\treturn {\n\t\ttype: REMOVE_TODO,\n\t\ttodoId,\n\t};\n}\nexport function removeAllTodoFromCategory(categoryName) {\n\treturn {\n\t\ttype: REMOVE_ALL_TODO_FROM_CATEGORY,\n\t\tcategoryName,\n\t};\n}\n// Для окна создания туду\nexport function toggleTodoWindow() {\n\treturn {\n\t\ttype: TOGGLE_TODO_WINDOW,\n\t};\n}\nexport function changeTitleText(text) {\n\treturn {\n\t\ttype: CHANGE_TITLE_TEXT,\n\t\ttext,\n\t};\n}\nexport function changeReminderTimeText(text) {\n\treturn {\n\t\ttype: CHANGE_REMINDER_TIME_TEXT,\n\t\ttext,\n\t};\n}\nexport function toggleReminded(todoId) {\n\treturn {\n\t\ttype: TOGGLE_REMINDED,\n\t\ttodoId,\n\t};\n}\nexport default todoItemsReducer;\n","import React from \"react\";\nimport \"../../../../styles/pages/index/todo.scss\";\nimport deleteIcon from \"../../../../media/images/delete.svg\";\nfunction Todo({ todo, toggleComplete, removeTodo }) {\n\tfunction toggleCompleteClick() {\n\t\ttoggleComplete(todo.id);\n\t}\n\tfunction removeTodoClick() {\n\t\tremoveTodo(todo.id);\n\t}\n\treturn (\n\t\t<div className={`flex-container todo ${todo.completed && \"completed\"}`}>\n\t\t\t<div className=\"default-checkbox\">\n\t\t\t\t<input\n\t\t\t\t\tonChange={toggleCompleteClick}\n\t\t\t\t\tclassName=\"todo__checkbox\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\tid={`completed${todo.id}`}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor={`completed${todo.id}`}></label>\n\t\t\t</div>\n\t\t\t<div className=\"todo__title-wrapper\">\n\t\t\t\t<h2 className=\"todo__title\">{todo.title}</h2>\n\t\t\t</div>\n\t\t\t<button onClick={removeTodoClick} className=\"default-btn todo__remove\">\n\t\t\t\t<img className=\"icon animated-icon\" src={deleteIcon} alt=\"Delete\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n}\nexport default Todo;\n","import {\n\tremoveTodo,\n\ttoggleComplete,\n} from \"../../../redux/reducers/todo-items-reducer\";\nimport Todo from \"./Todo\";\nimport { connect } from \"react-redux\";\n\nfunction mapStateToProps(state) {\n\treturn {};\n}\nexport default connect(mapStateToProps, { toggleComplete, removeTodo })(Todo);\n","import React from \"react\";\nimport \"../../styles/imports/message.scss\";\nfunction Message({ children, todoWindow, toggleWindow }) {\n\tfunction toggleWindowClick(e) {\n\t\tif (e.target === e.currentTarget) {\n\t\t\ttoggleWindow();\n\t\t}\n\t}\n\treturn (\n\t\t<div\n\t\t\tclassName={`message flex-container ${todoWindow.isOpened ? \"opened\" : \"closed\"}`}\n\t\t\tonClick={(e) => {\n\t\t\t\ttoggleWindowClick(e);\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"message__inner\">{children}</div>\n\t\t</div>\n\t);\n}\nexport default Message;\n","import React from \"react\";\nimport \"../../../styles/pages/index/index.scss\";\nimport TodoContainer from \"./Todo/TodoContainer\";\nimport Message from \"../../imports/Message\";\nfunction Index({ todos, todoWindow, addTodo, toggleTodoWindow, changeTitleText, changeReminderTimeText, ...props }) {\n\tfunction toggleTodoWindowClick() {\n\t\ttoggleTodoWindow();\n\t}\n\tfunction addTodoClick() {\n\t\tif (todoWindow.todoTitleText) {\n\t\t\tlet category = props.match.params.category;\n\t\t\taddTodo(category);\n\t\t\ttoggleTodoWindow();\n\t\t}\n\t\tif (todoWindow.todoReminderTimeText) {\n\t\t\tif (Notification.permission !== \"granted\") {\n\t\t\t\tNotification.requestPermission();\n\t\t\t}\n\t\t}\n\t}\n\tfunction changeTitleTextInput(e) {\n\t\tchangeTitleText(e.target.value);\n\t}\n\tfunction changeReminderTimeTextEvent(e) {\n\t\tchangeReminderTimeText(e.target.value);\n\t}\n\n\treturn (\n\t\t<main className=\"container\">\n\t\t\t{todos.map((todo) =>\n\t\t\t\ttodo.category == props.match.params.category ? <TodoContainer key={todo.id} todo={todo} /> : \"\"\n\t\t\t)}\n\t\t\t<div className=\"add-todo-block\">\n\t\t\t\t<button onClick={toggleTodoWindowClick} className=\"add-todo-block__btn\">\n\t\t\t\t\t+\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Message todoWindow={todoWindow} toggleWindow={toggleTodoWindow}>\n\t\t\t\t<div className=\"message__header\">\n\t\t\t\t\t<h2>Create Todo</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message__body\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tchangeTitleTextInput(e);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Todo Title\"\n\t\t\t\t\t\tvalue={todoWindow.todoTitleText}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"message__reminder-time-block\">\n\t\t\t\t\t\t<label htmlFor=\"time\">Reminder time</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={(e) => changeReminderTimeTextEvent(e)}\n\t\t\t\t\t\t\tvalue={todoWindow.todoReminderTimeText}\n\t\t\t\t\t\t\ttype=\"time\"\n\t\t\t\t\t\t\tid=\"time\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"bg-btn\" onClick={addTodoClick}>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</Message>\n\t\t</main>\n\t);\n}\nexport default Index;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Index from \"./Index\";\nimport {\n\taddTodo,\n\tchangeReminderTimeText,\n\tchangeTitleText,\n\ttoggleTodoWindow,\n} from \"../../redux/reducers/todo-items-reducer\";\nimport { withRouter } from \"react-router\";\nfunction mapStateToProps(state) {\n\treturn {\n\t\ttodos: state.todoItems.todos,\n\t\ttodoWindow: state.todoItems.todoCreateWindow,\n\t};\n}\nlet withRouterContainer = withRouter(Index);\nexport default connect(mapStateToProps, {\n\taddTodo,\n\ttoggleTodoWindow,\n\tchangeTitleText,\n\tchangeReminderTimeText,\n})(withRouterContainer);\n","import React from \"react\";\nimport { NavLink, Redirect } from \"react-router-dom\";\nimport \"../../../../../styles/imports/categories/category.scss\";\nimport deleteIcon from \"../../../../../media/images/delete.svg\";\nfunction Category({ category, removeCategory, removeAllTodoFromCategory, ...props }) {\n\tfunction removeCategoryClick() {\n\t\tremoveCategory(category);\n\t\tremoveAllTodoFromCategory(category);\n\t\tprops.history.push(\"/\");\n\t}\n\treturn (\n\t\t<div className=\"category flex-container\">\n\t\t\t<NavLink to={`/categories/${category}`}>{category}</NavLink>\n\t\t\t<button onClick={removeCategoryClick} className=\"default-btn\">\n\t\t\t\t<img className=\"animated-icon small-icon\" src={deleteIcon} alt=\"Delete\" />\n\t\t\t</button>\n\t\t</div>\n\t);\n}\nexport default Category;\n","const OPEN = \"OPEN\";\nconst OPEN_CATEGORIES = \"OPEN-CATEGORIES\";\nconst ADD_CATEGORY = \"ADD-CATEGORY\";\nconst REMOVE_CATEGORY = \"REMOVE-CATEGORY\";\n//Для окна создания категории\nconst TOGGLE_CREATE_CATEGORY_WINDOW = \"TOGGLE-CREATE-CATEGORY-WINDOW\";\nconst CATEGORY_WINDOW_TEXT_CHANGE = \"CATEGORY_WINDOW_TEXT_CHANGE\";\nlet initialState = {\n\tisOpened: false,\n\tisCategoriesOpened: false,\n\tcategories: {\n\t\titems: [],\n\t\tcategoriesCreateWindow: {\n\t\t\tisOpened: false,\n\t\t\tcategoryNameText: \"\",\n\t\t},\n\t},\n};\nfunction menuReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase OPEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisOpened: !state.isOpened,\n\t\t\t};\n\t\tcase OPEN_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisCategoriesOpened: !state.isCategoriesOpened,\n\t\t\t};\n\t\tcase ADD_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: {\n\t\t\t\t\t...state.categories,\n\t\t\t\t\titems: [...state.categories.items, state.categories.categoriesCreateWindow.categoryNameText],\n\t\t\t\t\tcategoriesCreateWindow: { ...state.categories.categoriesCreateWindow, categoryNameText: \"\" },\n\t\t\t\t},\n\t\t\t};\n\t\tcase REMOVE_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: {\n\t\t\t\t\t...state.categories,\n\t\t\t\t\titems: state.categories.items.filter((category) => category !== action.categoryName),\n\t\t\t\t},\n\t\t\t};\n\t\t//Для окна создания категории\n\t\tcase TOGGLE_CREATE_CATEGORY_WINDOW:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: {\n\t\t\t\t\t...state.categories,\n\t\t\t\t\tcategoriesCreateWindow: {\n\t\t\t\t\t\t...state.categories.categoriesCreateWindow,\n\t\t\t\t\t\tisOpened: !state.categories.categoriesCreateWindow.isOpened,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\tcase CATEGORY_WINDOW_TEXT_CHANGE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: {\n\t\t\t\t\t...state.categories,\n\t\t\t\t\tcategoriesCreateWindow: {\n\t\t\t\t\t\t...state.categories.categoriesCreateWindow,\n\t\t\t\t\t\tcategoryNameText: action.text,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nexport function openMenu() {\n\treturn {\n\t\ttype: OPEN,\n\t};\n}\nexport function openCategories() {\n\treturn {\n\t\ttype: OPEN_CATEGORIES,\n\t};\n}\nexport function addCategory(name) {\n\treturn {\n\t\ttype: ADD_CATEGORY,\n\t\tname,\n\t};\n}\n//Для окна создания категории\nexport function toggleCreateCategoryWindow() {\n\treturn {\n\t\ttype: TOGGLE_CREATE_CATEGORY_WINDOW,\n\t};\n}\nexport function categoryWindowTextChange(text) {\n\treturn {\n\t\ttype: CATEGORY_WINDOW_TEXT_CHANGE,\n\t\ttext,\n\t};\n}\nexport function removeCategory(categoryName) {\n\treturn {\n\t\ttype: REMOVE_CATEGORY,\n\t\tcategoryName,\n\t};\n}\nexport default menuReducer;\n","import React from \"react\";\nimport Category from \"./Category\";\nimport { connect } from \"react-redux\";\nimport { removeCategory } from \"../../../../redux/reducers/menu-reducer\";\nimport { withRouter } from \"react-router\";\nimport { removeAllTodoFromCategory } from \"../../../../redux/reducers/todo-items-reducer\";\nfunction mapStateToProps(state) {\n\treturn {};\n}\nlet withRouterContainer = withRouter(Category);\nexport default connect(mapStateToProps, { removeCategory, removeAllTodoFromCategory })(withRouterContainer);\n","import React from \"react\";\nimport Message from \"../../Message\";\nimport CategoryContainer from \"./Category/CategoryContainer\";\nfunction Categories({ categories, addCategory, toggleCreateCategoryWindow, categoryWindowTextChange }) {\n\tfunction toggleCreateCategoryWindowClick() {\n\t\ttoggleCreateCategoryWindow();\n\t}\n\tfunction categoryWindowTextChaneEvent(e) {\n\t\tcategoryWindowTextChange(e.target.value);\n\t}\n\tfunction addCategoryClick() {\n\t\taddCategory();\n\t\ttoggleCreateCategoryWindow();\n\t}\n\treturn (\n\t\t<>\n\t\t\t{categories.items.map((category, index) => {\n\t\t\t\treturn <CategoryContainer key={index} category={category} />;\n\t\t\t})}\n\t\t\t<button onClick={toggleCreateCategoryWindowClick} className=\"default-btn add-category-btn\">\n\t\t\t\t+\n\t\t\t</button>\n\t\t\t<Message todoWindow={categories.categoriesCreateWindow} toggleWindow={toggleCreateCategoryWindow}>\n\t\t\t\t<div className=\"message__header\">\n\t\t\t\t\t<h2>Create Todo</h2>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"message__body\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={(e) => categoryWindowTextChaneEvent(e)}\n\t\t\t\t\t\tvalue={categories.categoriesCreateWindow.categoryNameText}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Category name\"\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={addCategoryClick} className=\"bg-btn\">\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</Message>\n\t\t</>\n\t);\n}\nexport default Categories;\n","import React from \"react\";\nimport Categories from \"./Categories\";\nimport { connect } from \"react-redux\";\nimport {\n\taddCategory,\n\tcategoryWindowTextChange,\n\ttoggleCreateCategoryWindow,\n} from \"../../../redux/reducers/menu-reducer\";\nfunction mapStateToProps(state) {\n\treturn {\n\t\tcategories: state.menu.categories,\n\t};\n}\n\nexport default connect(mapStateToProps, { addCategory, toggleCreateCategoryWindow, categoryWindowTextChange })(\n\tCategories\n);\n","import React from \"react\";\nimport \"../../../styles/imports/menu.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport CategoriesContainer from \"./Categories/CategoriesContainer\";\nfunction Menu({ menu, openMenu, openCategories }) {\n\tfunction openMenuClick() {\n\t\topenMenu();\n\t}\n\tfunction openCategoriesClick(e) {\n\t\topenCategories();\n\t}\n\treturn (\n\t\t<div className=\"menu-full-wrapper\">\n\t\t\t<input checked={menu.isOpened} onChange={openMenuClick} id=\"menu__toggle\" type=\"checkbox\" />\n\t\t\t<label className=\"menu-btn flex-container\" htmlFor=\"menu__toggle\">\n\t\t\t\t<span></span>\n\t\t\t</label>\n\t\t\t<div className=\"menu-content-wrapper\">\n\t\t\t\t<div className=\"menu-content flex-container\">\n\t\t\t\t\t<NavLink to=\"/\">Home</NavLink>\n\t\t\t\t\t<div className=\"categories-wrapper\">\n\t\t\t\t\t\t<button onClick={(e) => openCategoriesClick(e)} className=\"default-btn\">\n\t\t\t\t\t\t\tCategories <span className={menu.isCategoriesOpened ? \"opened\" : \"\"}>&#8249;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className={`categories flex-container ${menu.isCategoriesOpened ? \"opened\" : \"\"}`}>\n\t\t\t\t\t\t\t<CategoriesContainer />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<NavLink to=\"/settings\">Settings</NavLink>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default Menu;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport { openCategories, openMenu } from \"../../redux/reducers/menu-reducer\";\nimport { connect } from \"react-redux\";\nfunction mapStateToProps(state) {\n\treturn {\n\t\tmenu: state.menu,\n\t};\n}\nexport default connect(mapStateToProps, { openMenu, openCategories })(Menu);\n","const CHANGE_THEME = \"CHANGE-THEME\";\nlet initialState = {\n\ttheme: \"dark\",\n};\nfunction settingsReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CHANGE_THEME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttheme: action.theme,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\nexport function changeTheme(theme) {\n\treturn {\n\t\ttype: CHANGE_THEME,\n\t\ttheme,\n\t};\n}\nexport default settingsReducer;\n","import React from \"react\";\nimport \"../../../styles/pages/settings/settings.scss\";\nfunction Settings({ settings, changeTheme }) {\n\tfunction changeThemeClick(e) {\n\t\tchangeTheme(e.target.value);\n\t}\n\treturn (\n\t\t<main className=\"container\">\n\t\t\t<div className=\"settings__change-theme-block\">\n\t\t\t\t<label htmlFor=\"themes\">Select theme</label>\n\t\t\t\t<select\n\t\t\t\t\tonChange={(e) => changeThemeClick(e)}\n\t\t\t\t\tvalue={settings.theme}\n\t\t\t\t\tname=\"themes\"\n\t\t\t\t\tid=\"themes\"\n\t\t\t\t>\n\t\t\t\t\t<option value=\"dark\">Dark</option>\n\t\t\t\t\t<option value=\"light\">Light</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</main>\n\t);\n}\nexport default Settings;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeTheme } from \"../../redux/reducers/settings-reducer\";\nimport Settings from \"./Settings\";\nfunction mapStateToProps(state) {\n\treturn {\n\t\tsettings: state.settings,\n\t};\n}\nexport default connect(mapStateToProps, { changeTheme })(Settings);\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/imports/Header\";\nimport \"./styles/default/default.scss\";\nimport IndexContainer from \"./components/pages/Index/IndexContainer\";\nimport MenuContainer from \"./components/imports/Menu/MenuContainer\";\nimport SettingsContainer from \"./components/pages/Settings/SettingsContainer\";\nfunction App({ settings }) {\n\treturn (\n\t\t<div className=\"App\" data-theme={settings.theme}>\n\t\t\t<HashRouter>\n\t\t\t\t<Header />\n\t\t\t\t<MenuContainer />\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<IndexContainer />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/categories/:category\">\n\t\t\t\t\t<IndexContainer />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/settings\">\n\t\t\t\t\t<SettingsContainer />\n\t\t\t\t</Route>\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport App from \"./App\";\nimport { connect } from \"react-redux\";\nfunction mapStateToProps(state) {\n\treturn {\n\t\tsettings: state.settings,\n\t};\n}\nexport default connect(mapStateToProps)(App);\n","import { combineReducers, createStore } from \"redux\";\nimport todoItemsReducer, {\n\ttoggleReminded,\n} from \"./reducers/todo-items-reducer\";\nimport menuReducer from \"./reducers/menu-reducer\";\nimport settingsReducer from \"./reducers/settings-reducer\";\nlet combinedReducers = combineReducers({\n\ttodoItems: todoItemsReducer,\n\tmenu: menuReducer,\n\tsettings: settingsReducer,\n});\nconst persistedState = localStorage.getItem(\"state\")\n\t? JSON.parse(localStorage.getItem(\"state\"))\n\t: {};\nlet store = createStore(combinedReducers, persistedState);\nstore.subscribe(() => {\n\tlocalStorage.setItem(\"state\", JSON.stringify(store.getState()));\n});\nwindow.store = store;\nsetInterval(() => {\n\tlet array = store.getState().todoItems.todos;\n\tlet currentTime = new Date(Date.now()).toLocaleTimeString().slice(0, 5);\n\tarray.forEach((todo) => {\n\t\tif (\n\t\t\ttodo.reminderTime === currentTime &&\n\t\t\t!todo.isReminded &&\n\t\t\t!todo.completed\n\t\t) {\n\t\t\tif (Notification.permission === \"granted\") {\n\t\t\t\tstore.dispatch(toggleReminded(todo.id));\n\t\t\t\tlet notification = new Notification(\n\t\t\t\t\t\"Have you forgotten about your task?\",\n\t\t\t\t\t{\n\t\t\t\t\t\tbody: `The task ${todo.title} is waiting for you`,\n\t\t\t\t\t\ticon: \"logo.png\",\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n}, 1000);\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AppContainer from \"./AppContainer\";\nimport store from \"./components/redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<AppContainer />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}